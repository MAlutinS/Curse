// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id            Int          @id @default(autoincrement())
  name          String
  department    Department   @relation(fields: [department_id], references: [id])
  department_id Int
  head          Employee     @relation("TeamHead", fields: [head_id], references: [id])
  head_id       Int          @unique
  locomotives   Locomotive[]
  waybills      Waybill[]
}

model Department {
  id         Int        @id @default(autoincrement())
  name       String
  head       Employee   @relation("DepartmentHead", fields: [head_id], references: [id])
  head_id    Int        @unique
  work_scope String
  teams      Team[]
  employees  Employee[] @relation("DepartmentEmployees")
}

model Employee {
  id                 Int         @id @default(autoincrement())
  name               String
  position           String
  employee_number    String      @unique
  department         Department?  @relation("DepartmentEmployees", fields: [department_id], references: [id])
  department_id      Int?
  team               Team?       @relation("TeamHead")
  cashier            Cashier?
  managed_department Department? @relation("DepartmentHead")
}

model Train {
  id               Int        @id @default(autoincrement())
  train_number     String     @unique
  day_of_operation String
  locomotive       Locomotive @relation(fields: [locomotive_id], references: [id])
  locomotive_id    Int
  route            Route      @relation(fields: [route_id], references: [id])
  route_id         Int
  waybills         Waybill[]
  luggages         Luggage[]
  tickets          Ticket[]
  carriage_count   Int 
}

model Locomotive {
  id                     Int        @id @default(autoincrement())
  type                   String
  condition              String
  annual_inspection_date DateTime
  inspection_team        Team       @relation(fields: [inspection_team_id], references: [id])
  inspection_team_id     Int
  carriages              Carriage[]
  trains                 Train[]
}

model Carriage {
  id                        Int        @id @default(autoincrement())
  type                      String
  side_number               String     @unique
  conductor_employee_number String
  locomotive                Locomotive @relation(fields: [locomotive_id], references: [id])
  locomotive_id             Int
}

model Waybill {
  id             Int      @id @default(autoincrement())
  train          Train    @relation(fields: [train_id], references: [id])
  train_id       Int
  departure_date DateTime
  arrival_date   DateTime
  crew           Team     @relation(fields: [crew_id], references: [id])
  crew_id        Int
}

model Luggage {
  id                  Int       @id @default(autoincrement())
  train               Train     @relation(fields: [train_id], references: [id])
  train_id            Int
  passenger           Passenger @relation(fields: [passenger_id], references: [id])
  passenger_id        Int
  cargo_type          String
  cargo_weight        Float
  transportation_cost Float
}

model Route {
  id           Int      @id @default(autoincrement())
  route_number String   @unique
  station_list String
  fare         Float
  category     String
  tickets      Ticket[]
  trains       Train[]
}

model Passenger {
  id          Int       @id @default(autoincrement())
  name        String
  document    Document  @relation(fields: [document_id], references: [id])
  document_id Int       @unique
  gender      String
  tickets     Ticket[]
  luggages    Luggage[]
}

model Ticket {
  id            Int       @id @default(autoincrement())
  ticket_number String    @unique
  train         Train     @relation(fields: [train_id], references: [id])
  train_id      Int
  passenger     Passenger @relation(fields: [passenger_id], references: [id])
  passenger_id  Int
  purchase_date DateTime
  route         Route     @relation(fields: [route_id], references: [id])
  route_id      Int
  fare          Float
}

model Cashier {
  id             Int      @id @default(autoincrement())
  cashier_number String   @unique
  employee       Employee @relation(fields: [employee_id], references: [id])
  employee_id    Int      @unique
  status         String
  station        String // Новое поле
}

model Document {
  id              Int        @id @default(autoincrement())
  document_number String     @unique
  series          String
  issue_date      DateTime
  passenger       Passenger?
}
